{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../inputs-field/inputs-field.component\";\n\nfunction LoginComponent_div_6_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p\");\n  }\n}\n\nfunction LoginComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_6_p_1_Template, 1, 0, \"p\", 1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.emailControl.re);\n  }\n}\n\nexport class LoginComponent {\n  constructor() {\n    this.userEmail = 'Usuario';\n    this.userPsw = 'Contraseña';\n    this.logText = 'Ingresar';\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', Validators.required)\n    });\n  }\n\n  get emailControl() {\n    return this.loginForm.get('email');\n  }\n\n  get passwordControl() {\n    return this.loginForm.get('password');\n  }\n\n  signIn() {\n    const credentials = this.loginForm.value;\n  }\n\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)();\n};\n\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 12,\n  vars: 6,\n  consts: [[\"type\", \"email\", \"name\", \"email\", \"formControlName\", \"email\"], [4, \"ngIf\"], [\"type\", \"email\", \"formControlName\", \"email\", 3, \"phText\"], [\"type\", \"password\", \"formControlName\", \"password\", 3, \"phText\"], [\"type\", \"submit\", 3, \"disabled\", \"click\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Inicia Sesi\\u00F3n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\")(3, \"label\");\n      i0.ɵɵtext(4, \" Email \");\n      i0.ɵɵelement(5, \"input\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, LoginComponent_div_6_Template, 2, 1, \"div\", 1);\n      i0.ɵɵelement(7, \"app-inputs-field\", 2)(8, \"app-inputs-field\", 3);\n      i0.ɵɵelementStart(9, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_9_listener() {\n        return ctx.signIn();\n      });\n      i0.ɵɵpipe(10, \"async\");\n      i0.ɵɵtext(11, \" Iniciar Sesi\\u00F3n \");\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.emailControl.invalid && (ctx.emailControl.touched || ctx.emailControl.dirty));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"phText\", ctx.userEmail);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"phText\", ctx.userPsw);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", i0.ɵɵpipeBind1(10, 4, ctx.loginForm.statusChanges) !== \"VALID\");\n    }\n  },\n  dependencies: [i1.NgIf, i2.InputsFieldComponent, i1.AsyncPipe],\n  styles: [\"[_nghost-%COMP%] {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: stretch;\\r\\n    justify-content: flex-start;\\r\\n    padding: 28px;\\r\\n}\\r\\n\\r\\nh1[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 16px;\\r\\n}\\r\\n\\r\\nform[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n    padding: 12px 16px;\\r\\n    background-color: linear-gradient(0deg, #a61bf7 18.58%, #5e00ea 81.42%);\\r\\n    color: #fff;\\r\\n    border: none;\\r\\n    border-radius: 8px;\\r\\n    font-size: 0.875rem;\\r\\n    font-weight: 600;\\r\\n    cursor: pointer;\\r\\n    margin-top: 32px;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%]:hover, button[_ngcontent-%COMP%]:focus {\\r\\n    background-color: #7d29fa;\\r\\n    outline: none;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%]:disabled {\\r\\n    background-color: #505050;\\r\\n    cursor: not-allowed;\\r\\n}\\r\\n\\r\\n.errors-container[_ngcontent-%COMP%] {\\r\\n    font-size: 0.75rem;\\r\\n    color: #bd0c0c;\\r\\n    margin-bottom: 16px;\\r\\n    margin-top: -8px;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLG9CQUFvQjtJQUNwQiwyQkFBMkI7SUFDM0IsYUFBYTtBQUNqQjs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsdUVBQXVFO0lBQ3ZFLFdBQVc7SUFDWCxZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixnQkFBZ0I7SUFDaEIsZUFBZTtJQUNmLGdCQUFnQjtBQUNwQjs7QUFFQTs7SUFFSSx5QkFBeUI7SUFDekIsYUFBYTtBQUNqQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsY0FBYztJQUNkLG1CQUFtQjtJQUNuQixnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLHNCQUFzQjtBQUMxQiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogc3RyZXRjaDtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICAgIHBhZGRpbmc6IDI4cHg7XHJcbn1cclxuXHJcbmgxIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XHJcbn1cclxuXHJcbmZvcm0ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgICBwYWRkaW5nOiAxMnB4IDE2cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaW5lYXItZ3JhZGllbnQoMGRlZywgI2E2MWJmNyAxOC41OCUsICM1ZTAwZWEgODEuNDIlKTtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgZm9udC1zaXplOiAwLjg3NXJlbTtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBtYXJnaW4tdG9wOiAzMnB4O1xyXG59XHJcblxyXG5idXR0b246aG92ZXIsXHJcbmJ1dHRvbjpmb2N1cyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjN2QyOWZhO1xyXG4gICAgb3V0bGluZTogbm9uZTtcclxufVxyXG5cclxuYnV0dG9uOmRpc2FibGVkIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM1MDUwNTA7XHJcbiAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xyXG59XHJcblxyXG4uZXJyb3JzLWNvbnRhaW5lciB7XHJcbiAgICBmb250LXNpemU6IDAuNzVyZW07XHJcbiAgICBjb2xvcjogI2JkMGMwYztcclxuICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XHJcbiAgICBtYXJnaW4tdG9wOiAtOHB4O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn0iXX0= */\"],\n  changeDetection: 0\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,UAAjC,QAAmD,gBAAnD;;;;;;;ICMIC;;;;;;IADFA;IACEA;IACFA;;;;;IADMA;IAAAA;;;;ADER,OAAM,MAAOC,cAAP,CAAqB;EAiBzBC;IAhBA,iBAAmB,SAAnB;IACA,eAAiB,YAAjB;IACA,eAAiB,UAAjB;IACA,iBAAY,IAAIJ,SAAJ,CAAc;MACxBK,KAAK,EAAE,IAAIN,WAAJ,CAAgB,EAAhB,EAAoB,CAACE,UAAU,CAACK,QAAZ,EAAsBL,UAAU,CAACI,KAAjC,CAApB,CADiB;MAExBE,QAAQ,EAAE,IAAIR,WAAJ,CAAgB,EAAhB,EAAoBE,UAAU,CAACK,QAA/B;IAFc,CAAd,CAAZ;EAagB;;EARA,IAAZE,YAAY;IACd,OAAO,KAAKC,SAAL,CAAeC,GAAf,CAAmB,OAAnB,CAAP;EACD;;EAEkB,IAAfC,eAAe;IACjB,OAAO,KAAKF,SAAL,CAAeC,GAAf,CAAmB,UAAnB,CAAP;EACD;;EAIDE,MAAM;IACJ,MAAMC,WAAW,GAAG,KAAKJ,SAAL,CAAeK,KAAnC;EAGD;;AAvBwB;;;mBAAdX;AAAc;;;QAAdA;EAAcY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT3BjB;MAAIA;MAAaA;MACjBA,6BAAO,CAAP,EAAO,OAAP;MAEIA;MACAA;MACFA;MACAA;MAIAA,uCAAgG,CAAhG,EAAgG,kBAAhG,EAAgG,CAAhG;MAGAA;MACEA;QAAA,OAASkB,YAAT;MAAiB,CAAjB;;MAGAlB;MACFA;;;;MAZMA;MAAAA;MAIYA;MAAAA;MACAA;MAAAA;MAKhBA;MAAAA","names":["FormControl","FormGroup","Validators","i0","LoginComponent","constructor","email","required","password","emailControl","loginForm","get","passwordControl","signIn","credentials","value","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\jpere\\ProyectoFinal\\ProyectoFinal\\src\\app\\login\\login.component.ts","C:\\Users\\jpere\\ProyectoFinal\\ProyectoFinal\\src\\app\\login\\login.component.html"],"sourcesContent":["import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoginComponent {\n  userEmail:string = 'Usuario';\n  userPsw:string = 'Contraseña';\n  logText:string = 'Ingresar';\n  loginForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', Validators.required),\n  });\n\n  get emailControl(): FormControl {\n    return this.loginForm.get('email') as FormControl;\n  }\n\n  get passwordControl(): FormControl {\n    return this.loginForm.get('password') as FormControl;\n  }\n\n  constructor() {}\n\n  signIn(): void {\n    const credentials = this.loginForm.value;\n    \n    \n  }\n}","<h1>Inicia Sesión</h1>\n<form >\n  <label>\n    Email\n    <input type=\"email\" name=\"email\" formControlName=\"email\" />\n  </label>\n  <div *ngIf=\"emailControl.invalid && (emailControl.touched || emailControl.dirty)\">\n    <p *ngIf=\"emailControl.re\"></p>\n  </div>\n\n  <app-inputs-field [phText]=\"userEmail\" type=\"email\" formControlName=\"email\" ></app-inputs-field>\n  <app-inputs-field [phText]=\"userPsw\" type=\"password\" formControlName=\"password\"></app-inputs-field>\n\n  <button\n    (click)=\"signIn()\"\n    type=\"submit\"\n    [disabled]=\"(loginForm.statusChanges | async) !== 'VALID'\" > \n    Iniciar Sesión\n  </button>\n</form>"]},"metadata":{},"sourceType":"module"}